const t=t=>{if("string"!=typeof t||""===t)throw TypeError("It must be a valid tag name.");let e=document.querySelector(t);if(null===e)throw Error(`Invalid tag:${t}`);return e};class e{constructor(){this.trashItems=[],this.button=t('.button__component[data-type="garbage"]'),this.#t()}#t(){let t=JSON.parse(localStorage.getItem("trashItems"))||[];this.trashItems=t}#e(){localStorage.setItem("trashItems",JSON.stringify(this.trashItems))}moveItemToTrash(t){t&&(this.trashItems.unshift(t),this.#e())}rollbackItem(t){if(!t)throw Error("You must provide a valid ID.");let e=this.trashItems.findIndex(e=>e.id===t);if(-1!==e){let t=this.trashItems[e];return this.trashItems.splice(e,1),this.#e(),t}throw Error("The specified item element was not found.")}}new class{constructor(){this.#o()}#o(){let e=t('.button__component[data-type="theme"]');if(!e)throw Error("Invalid theme button");let o=localStorage.getItem("theme")||"dark";document.documentElement.setAttribute("data-theme",o),e.addEventListener("click",()=>{let t=document.documentElement.getAttribute("data-theme");t="light"===t?"dark":"light",document.documentElement.setAttribute("data-theme",t),localStorage.setItem("theme",t)})}};const o=new class{constructor(){this.todoItems=[],this.todoStatus="todo",this.trash=new e,this.container=t(".item-list__container"),this.#t(),this.#s(),this.#i(),this.temp=""}#i(){if(!this.trash.button)throw Error("Invalid trash button");this.trash.button.addEventListener("click",this.changeTodoStatus.bind(this))}changeTodoStatus(){let e=["todo","trash"].find(t=>t!==this.todoStatus);this.todoStatus=e||"todo";let o="todo"!==e;t('.input__component[data-type="creation"] input').disabled=o,t('.button__component[data-type="creation"]').disabled=o,t('.button__component[data-type="garbage"] > span').textContent="todo"===e?" auto_delete ":" edit_note ";let s="todo"===e?{total:"나의 할 일 목록",done:"완료된 목록"}:{total:"삭제된 할 일 목록",done:"삭제처리된 완료 목록"};t(".item-count__total .text").textContent=s.total,t(".item-count__done .text").textContent=s.done,this.#s(),this.#n();let i="todo"===e?{text1:"아직 등록된 할 일이 없습니다!",text2:"작업을 생성하고 할 일 목록을 정리하세요 \uD83D\uDE0B"}:{text1:"아직 삭제된 항목이 없습니다!",text2:"새로운 작업을 만들고 삭제해 보세요 \uD83E\uDD70"};t(".item-list__empty__container .text-1").textContent=i.text1,t(".item-list__empty__container .text-2").textContent=i.text2}#a(){let e=t(".item-list__container");e&&(e.innerHTML="")}#s(){this.#a();let t=this.#r();t.length>0&&(this.#d(!1),t.forEach(t=>this.#l(t,"beforeend",this.todoStatus))),this.#n()}#t(){let t=JSON.parse(localStorage.getItem("todoItems"))||[];this.todoItems=t}#e(){localStorage.setItem("todoItems",JSON.stringify(this.todoItems))}#n(){let e=t(".item-count__container"),o=e.querySelector(".item-count__total > .count"),s=e.querySelector(".item-count__done > .count"),i=this.#r(),n=i.length,a=i.filter(t=>!t.completed).length,r=i.filter(t=>t.completed).length;o.textContent=`${a}`,s.textContent=`${r}/${n}`,this.#d(n<=0)}removeItem(e){if(!e)throw Error("You must provide a valid ID.");let o=this.todoItems.findIndex(t=>t.id===e);-1!==o&&(this.trash.moveItemToTrash(this.todoItems[o]),this.todoItems.splice(o,1));let s=t(`.task__component[data-key="${e}"]`);s&&(s.remove(),this.#n(),this.#e())}toggleComplete(t){if(!t)throw Error("You must provide a valid ID.");let e=this.#r().find(e=>e.id===t);e&&(e.completed=!e.completed,document.querySelector(`.task__component[data-key="${t}"]`).classList.toggle("done",e.completed),this.#n(),this.#e())}addItem(t){if("string"!=typeof t||""===t)throw Error("Make sure you pass the correct string.");let e={id:Date.now(),text:t,completed:!1};this.todoItems.unshift(e),this.#l(e),this.#n(),this.#e()}#r(){return"todo"===this.todoStatus?this.todoItems:this.trash.trashItems}#l(e,o="afterbegin",s="todo"){let i=this.#m(e,s),n=document.createElement("template");n.innerHTML=i.trim();let a=n.content.firstChild;if(!a)throw Error("Item not found");e.completed&&a.classList.add("done");let r=a.querySelector('.button__component[data-type="editing"]');r&&r.addEventListener("click",()=>{let o=t(`.task__component[data-key="${e.id}"] input[type="text"]`),s=o.disabled?"edit":"noEdit";if(o.disabled="noEdit"===s,"edit"===s&&(o.focus(),this.temp=o.value),this.#h(o.value)){let t=this.todoItems.findIndex(({id:t})=>e.id===t);-1!==t&&(this.todoItems[t].text=o.value,this.#e())}else o.value=this.temp,this.temp="";t(`.task__component[data-key="${e.id}"] .button__component[data-type="editing"] > span`).textContent="edit"===s?"spellcheck":"edit_square"}),a.querySelector('input[type="checkbox"]').addEventListener("change",()=>{this.toggleComplete(e.id)}),a.querySelector('.button__component[data-type="deletion"]').addEventListener("click",()=>{"todo"===this.todoStatus?this.removeItem(e.id):(this.todoItems.unshift(this.trash.rollbackItem(e.id)),this.#e(),this.#s())}),this.container.insertAdjacentElement(o,a)}#h(t){return""===t?(window.alert("빈 문자열은 불가능합니다."),null):t}#d(e){let o=t(".item-list__empty__container"),s=t(".item-list__container");e?(o.style.display="flex",s.style.display="none"):(o.style.display="none",s.style.display="flex")}#m(t,e="todo"){if(!t?.id||!t?.text)throw Error("You must provide valid attributes.");let{id:o,text:s,completed:i}=t;return`
      <div class="task__component" data-key="${o}">
        <div class="checkbox__component">
          <label>
            <input type="checkbox" ${i?"checked":""}/>
          </label>
        </div>
        <div class="input__component">
          <input type="text" disabled placeholder="\u{D14D}\u{C2A4}\u{D2B8}\u{B97C} \u{C785}\u{B825}\u{D558}\u{C138}\u{C694}" value="${s}"/>
        </div>
        ${"todo"===e?`<button class="button__component" data-type="editing">
                <span class="material-symbols-outlined">edit_square</span>
              </button>`:"<div></div>"}
        <button class="button__component" data-type="deletion">
          <span class="material-symbols-outlined">${"todo"===e?" delete ":"redo"}</span>
        </button>
      </div>
    `}};new class{constructor({onSubmit:e}){this.form=t("#todo-form"),this.input=t('.input__component[data-type="creation"] > input'),this.callback=e,this.#u()}#u(){if(!this.form)throw Error("Invalid form");this.form.addEventListener("submit",this.handler.bind(this))}#h(t){return""===t?(window.alert("빈 문자열은 아이템 생성이 불가능합니다."),null):t}#c(){this.input.value=""}handler(t){if(t.preventDefault(),!this.input)throw Error("Invalid input");let e=this.#h(this.input.value);e&&(this.callback(e),this.#c())}}({onSubmit:o.addItem.bind(o)});
//# sourceMappingURL=index.b7403b5e.js.map
