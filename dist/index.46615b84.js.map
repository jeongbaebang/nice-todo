{"mappings":"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","sources":["<anon>","src/js/index.js","src/js/todo.js","src/js/trash.js","src/js/theme.js","src/js/utils.js","src/js/form.js"],"sourcesContent":["/**\n *\n * @param {?string} tag\n * @returns {Element}\n */ const $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9 = (tag)=>{\n    if (typeof tag !== \"string\" || tag === \"\") throw new TypeError(\"It must be a valid tag name.\");\n    const $tag = document.querySelector(tag);\n    if ($tag === null) throw new Error(`Invalid tag:${tag}`);\n    return $tag;\n};\n\n\nclass $db12283b528bfe21$export$14faa19a0f3bbeb2 {\n    constructor(){\n        this.#addThemeEvent();\n    }\n    #addThemeEvent() {\n        const button = (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)('.button__component[data-type=\"theme\"]');\n        if (!button) throw new Error(\"Invalid theme button\");\n        const currentTheme = localStorage.getItem(\"theme\") || \"dark\";\n        document.documentElement.setAttribute(\"data-theme\", currentTheme);\n        button.addEventListener(\"click\", ()=>{\n            let theme = document.documentElement.getAttribute(\"data-theme\");\n            theme = theme === \"light\" ? \"dark\" : \"light\";\n            document.documentElement.setAttribute(\"data-theme\", theme);\n            localStorage.setItem(\"theme\", theme);\n        });\n    }\n}\n\n\n\nclass $01032ea40510cb1f$export$99442c433de1441d {\n    /**\n   * @type {{ id: number, text: string, completed: boolean }[]}\n   */ trashItems = [];\n    constructor(){\n        this.button = (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)('.button__component[data-type=\"garbage\"]');\n        this.#loadItemsFromStorage();\n    }\n    #loadItemsFromStorage() {\n        const storedTrashItems = JSON.parse(localStorage.getItem(\"trashItems\")) || [];\n        this.trashItems = storedTrashItems;\n    }\n    #saveItemsToStorage() {\n        localStorage.setItem(\"trashItems\", JSON.stringify(this.trashItems));\n    }\n    moveItemToTrash(item) {\n        if (item) {\n            this.trashItems.unshift(item);\n            this.#saveItemsToStorage(\"trashItems\");\n        }\n    }\n    rollbackItem(id) {\n        if (!id) throw new Error(\"You must provide a valid ID.\");\n        const index = this.trashItems.findIndex((item)=>item.id === id);\n        if (index !== -1) {\n            const payload = this.trashItems[index];\n            this.trashItems.splice(index, 1);\n            this.#saveItemsToStorage();\n            return payload;\n        } else throw new Error(\"The specified item element was not found.\");\n    }\n}\n\n\n\nclass $d6bcb198fc403a32$export$310ab82c471b5b90 {\n    /**\n   * @type {\"todo\" | \"trash\"}\n   */ todoStatus = \"todo\";\n    /**\n   * @type {{ id: number, text: string, completed: boolean }[]}\n   */ todoItems = [];\n    constructor(){\n        this.trash = new (0, $01032ea40510cb1f$export$99442c433de1441d)();\n        this.container = (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)(\".item-list__container\");\n        this.#loadItemsFromStorage();\n        this.#renderItemList();\n        this.#initTrashButtonListeners();\n    }\n    #initTrashButtonListeners() {\n        if (!this.trash.button) throw new Error(\"Invalid trash button\");\n        this.trash.button.addEventListener(\"click\", this.changeTodoStatus.bind(this));\n    }\n    changeTodoStatus() {\n        const statuses = [\n            \"todo\",\n            \"trash\"\n        ];\n        const status = statuses.find((status)=>status !== this.todoStatus);\n        const iconType = status === \"todo\" ? \" auto_delete \" : \" edit_note \";\n        this.todoStatus = status;\n        // 삭제 상태일 경우 폼 입력 불가\n        const isDisabled = status === \"todo\" ? false : true;\n        (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)('.input__component[data-type=\"creation\"] input').disabled = isDisabled;\n        (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)('.button__component[data-type=\"creation\"]').disabled = isDisabled;\n        // 아이콘 변경\n        (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)('.button__component[data-type=\"garbage\"] > span').textContent = iconType;\n        // 텍스트 변경\n        const textType = status === \"todo\" ? {\n            total: \"\\uB098\\uC758 \\uD560 \\uC77C \\uBAA9\\uB85D\",\n            done: \"\\uC644\\uB8CC\\uB41C \\uBAA9\\uB85D\"\n        } : {\n            total: \"\\uC0AD\\uC81C\\uB41C \\uD560 \\uC77C \\uBAA9\\uB85D\",\n            done: \"\\uC0AD\\uC81C\\uCC98\\uB9AC\\uB41C \\uC644\\uB8CC \\uBAA9\\uB85D\"\n        };\n        (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)(\".item-count__total .text\").textContent = textType.total;\n        (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)(\".item-count__done .text\").textContent = textType.done;\n        // 아이템 리스트 보여주기\n        this.#renderItemList();\n        this.#updateItemLength();\n        // 빈 리스트 텍스트 수정\n        const emptyTextType = status === \"todo\" ? {\n            text1: \"\\uC544\\uC9C1 \\uB4F1\\uB85D\\uB41C \\uD560 \\uC77C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4!\",\n            text2: \"\\uC791\\uC5C5\\uC744 \\uC0DD\\uC131\\uD558\\uACE0 \\uD560 \\uC77C \\uBAA9\\uB85D\\uC744 \\uC815\\uB9AC\\uD558\\uC138\\uC694 \\uD83D\\uDE0B\"\n        } : {\n            text1: \"\\uC544\\uC9C1 \\uC0AD\\uC81C\\uB41C \\uD56D\\uBAA9\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4!\",\n            text2: \"\\uC0C8\\uB85C\\uC6B4 \\uC791\\uC5C5\\uC744 \\uB9CC\\uB4E4\\uACE0 \\uC0AD\\uC81C\\uD574 \\uBCF4\\uC138\\uC694 \\uD83E\\uDD70\"\n        };\n        (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)(\".item-list__empty__container .text-1\").textContent = emptyTextType.text1;\n        (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)(\".item-list__empty__container .text-2\").textContent = emptyTextType.text2;\n    }\n    #clearItemList() {\n        const todoListContainer = (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)(\".item-list__container\");\n        if (todoListContainer) todoListContainer.innerHTML = \"\";\n    }\n    #renderItemList() {\n        this.#clearItemList();\n        const items = this.#getCurrentItems();\n        if (items.length > 0) {\n            this.#toggleEmptyListState(false);\n            items.forEach((item)=>this.#renderItem(item, \"beforeend\", this.todoStatus));\n        }\n        this.#updateItemLength();\n    }\n    #loadItemsFromStorage() {\n        const storedTodoItems = JSON.parse(localStorage.getItem(\"todoItems\")) || [];\n        this.todoItems = storedTodoItems;\n    }\n    #saveItemsToStorage() {\n        localStorage.setItem(\"todoItems\", JSON.stringify(this.todoItems));\n    }\n    #updateItemLength() {\n        const container = (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)(\".item-count__container\");\n        const todoLengthText = container.querySelector(\".item-count__total > .count\");\n        const doneLengthText = container.querySelector(\".item-count__done > .count\");\n        const list = this.#getCurrentItems();\n        const totalLength = list.length;\n        const todoLength = list.filter((item)=>!item.completed).length;\n        const doneLength = list.filter((item)=>item.completed).length;\n        todoLengthText.textContent = todoLength;\n        doneLengthText.textContent = `${doneLength}/${totalLength}`;\n        this.#toggleEmptyListState(totalLength <= 0);\n    }\n    removeItem(id) {\n        if (!id) throw new Error(\"You must provide a valid ID.\");\n        const index = this.todoItems.findIndex((item)=>item.id === id);\n        if (index !== -1) {\n            this.trash.moveItemToTrash(this.todoItems[index]);\n            this.todoItems.splice(index, 1);\n        }\n        const target = (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)(`.task__component[data-key=\"${id}\"]`);\n        if (target) {\n            target.remove();\n            this.#updateItemLength();\n            this.#saveItemsToStorage();\n        }\n    }\n    toggleComplete(id) {\n        if (!id) throw new Error(\"You must provide a valid ID.\");\n        const items = this.#getCurrentItems();\n        const item = items.find((item)=>item.id === id);\n        if (item) {\n            item.completed = !item.completed;\n            const target = document.querySelector(`.task__component[data-key=\"${id}\"]`);\n            target.classList.toggle(\"done\", item.completed);\n            this.#updateItemLength();\n            this.#saveItemsToStorage();\n        }\n    }\n    addItem(value) {\n        if (typeof value !== \"string\" || value === \"\") throw new Error(\"Make sure you pass the correct string.\");\n        const item = {\n            id: Date.now(),\n            text: value,\n            completed: false\n        };\n        this.todoItems.unshift(item);\n        this.#renderItem(item);\n        this.#updateItemLength();\n        this.#saveItemsToStorage();\n    }\n    #getCurrentItems() {\n        return this.todoStatus === \"todo\" ? this.todoItems : this.trash.trashItems;\n    }\n    /**\n   * @param {Object} item\n   * @param {number} item.id\n   * @param {number} item.text\n   * @param {number} item.completed\n   * @param {\"afterbegin\" | \"afterend\" | \"beforebegin\" | \"beforeend\"} position\n   * @param {\"todo\" | \"trash\"} type\n   */ #renderItem(item, position = \"afterbegin\", type = \"todo\") {\n        const itemHTML = this.#generateItem(item, type);\n        const template = document.createElement(\"template\");\n        template.innerHTML = itemHTML.trim();\n        const newItem = template.content.firstChild;\n        if (!newItem) throw new Error(\"Item not found\");\n        if (item.completed) newItem.classList.add(\"done\");\n        const editButton = newItem.querySelector('.button__component[data-type=\"editing\"]');\n        if (editButton) editButton.addEventListener(\"click\", ()=>{\n            const target = (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)(`.task__component[data-key=\"${item.id}\"] input[type=\"text\"]`);\n            const status = target.disabled ? \"edit\" : \"noEdit\";\n            target.disabled = status === \"noEdit\" ? true : false;\n            if (status === \"edit\") target.focus();\n            (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)(`.task__component[data-key=\"${item.id}\"] .button__component[data-type=\"editing\"] > span`).textContent = status === \"edit\" ? \"spellcheck\" : \"edit_square\";\n        });\n        newItem.querySelector('input[type=\"checkbox\"]').addEventListener(\"change\", ()=>{\n            this.toggleComplete(item.id);\n        });\n        newItem.querySelector('.button__component[data-type=\"deletion\"]').addEventListener(\"click\", ()=>{\n            if (this.todoStatus === \"todo\") this.removeItem(item.id);\n            else {\n                this.todoItems.unshift(this.trash.rollbackItem(item.id));\n                this.#saveItemsToStorage();\n                this.#renderItemList();\n            }\n        });\n        this.container.insertAdjacentElement(position, newItem);\n    }\n    #toggleEmptyListState(isEmpty) {\n        const containerEmptyList = (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)(\".item-list__empty__container\");\n        const containerList = (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)(\".item-list__container\");\n        if (isEmpty) {\n            containerEmptyList.style.display = \"flex\";\n            containerList.style.display = \"none\";\n        } else {\n            containerEmptyList.style.display = \"none\";\n            containerList.style.display = \"flex\";\n        }\n    }\n    /**\n   * @param {Object} item\n   * @param {number} item.id\n   * @param {number} item.text\n   * @param {number} item.completed\n   * @param {\"todo\" | \"trash\"} type\n   */ #generateItem(item, type = \"todo\") {\n        if (!item?.id || !item?.text) throw new Error(\"You must provide valid attributes.\");\n        const { id: id, text: text, completed: completed } = item;\n        return `\n      <div class=\"task__component\" data-key=\"${id}\">\n        <div class=\"checkbox__component\">\n          <label>\n            <input type=\"checkbox\" ${completed ? \"checked\" : \"\"}/>\n          </label>\n        </div>\n        <div class=\"input__component\">\n          <input type=\"text\" disabled placeholder=\"\\u{D14D}\\u{C2A4}\\u{D2B8}\\u{B97C} \\u{C785}\\u{B825}\\u{D558}\\u{C138}\\u{C694}\" value=\"${text}\"/>\n        </div>\n        ${type === \"todo\" ? `<button class=\"button__component\" data-type=\"editing\">\n                <span class=\"material-symbols-outlined\">edit_square</span>\n              </button>` : \"<div></div>\"}\n        <button class=\"button__component\" data-type=\"deletion\">\n          <span class=\"material-symbols-outlined\">${type === \"todo\" ? \" delete \" : \"redo\"}</span>\n        </button>\n      </div>\n    `;\n    }\n}\n\n\n\nclass $d2247bac48b6a171$export$ca95ea95faa89f36 {\n    /**\n   * @typedef {function(string): void} OnSubmit\n   * @param {Object} params\n   * @param {OnSubmit} params.onSubmit - 아이템이 제출될 때 호출되는 콜백 함수\n   */ constructor({ onSubmit: onSubmit }){\n        this.form = (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)(\"#todo-form\");\n        this.input = (0, $a6df9c40ba402dc9$export$3d8c2f653ac9d0b9)('.input__component[data-type=\"creation\"] > input');\n        this.callback = onSubmit;\n        // 폼 제출 이벤트 리스너 등록\n        this.#initEventListeners();\n    }\n    #initEventListeners() {\n        if (!this.form) throw new Error(\"Invalid form\");\n        this.form.addEventListener(\"submit\", this.handler.bind(this));\n    }\n    /**\n   * @param {string} value\n   */ #checkValue(value) {\n        if (value === \"\") {\n            window.alert(\"\\uBE48 \\uBB38\\uC790\\uC5F4\\uC740 \\uC544\\uC774\\uD15C \\uC0DD\\uC131\\uC774 \\uBD88\\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.\");\n            return null;\n        }\n        return value;\n    }\n    #clearValue() {\n        this.input.value = \"\";\n    }\n    /**\n   * @param {Event} event\n   */ handler(event) {\n        event.preventDefault();\n        if (!this.input) throw new Error(\"Invalid input\");\n        const value = this.#checkValue(this.input.value);\n        if (value) {\n            this.callback(value);\n            this.#clearValue();\n        }\n    }\n}\n\n\n\nconst $8f6a480bb40b134f$var$todo = new (0, $d6bcb198fc403a32$export$310ab82c471b5b90)();\nnew (0, $db12283b528bfe21$export$14faa19a0f3bbeb2)();\nnew (0, $d2247bac48b6a171$export$ca95ea95faa89f36)({\n    onSubmit: $8f6a480bb40b134f$var$todo.addItem.bind($8f6a480bb40b134f$var$todo)\n});\n\n\n//# sourceMappingURL=index.46615b84.js.map\n","import { TodoApp } from './todo';\nimport { FormHandler } from './form';\nimport { Theme } from './theme';\n\nconst todo = new TodoApp();\n\nnew Theme();\nnew FormHandler({ onSubmit: todo.addItem.bind(todo) });\n","import { Trash } from './trash';\nimport { $ } from './utils';\n\nexport class TodoApp {\n  /**\n   * @type {\"todo\" | \"trash\"}\n   */\n  todoStatus = 'todo';\n\n  /**\n   * @type {{ id: number, text: string, completed: boolean }[]}\n   */\n  todoItems = [];\n\n  constructor() {\n    this.trash = new Trash();\n    this.container = $('.item-list__container');\n    this.#loadItemsFromStorage();\n    this.#renderItemList();\n    this.#initTrashButtonListeners();\n  }\n\n  #initTrashButtonListeners() {\n    if (!this.trash.button) {\n      throw new Error('Invalid trash button');\n    }\n\n    this.trash.button.addEventListener(\n      'click',\n      this.changeTodoStatus.bind(this)\n    );\n  }\n\n  changeTodoStatus() {\n    const statuses = ['todo', 'trash'];\n    const status = statuses.find((status) => status !== this.todoStatus);\n    const iconType = status === 'todo' ? ' auto_delete ' : ' edit_note ';\n\n    this.todoStatus = status;\n    // 삭제 상태일 경우 폼 입력 불가\n    const isDisabled = status === 'todo' ? false : true;\n    $('.input__component[data-type=\"creation\"] input').disabled = isDisabled;\n    $('.button__component[data-type=\"creation\"]').disabled = isDisabled;\n    // 아이콘 변경\n    $('.button__component[data-type=\"garbage\"] > span').textContent = iconType;\n    // 텍스트 변경\n    const textType =\n      status === 'todo'\n        ? { total: '나의 할 일 목록', done: '완료된 목록' }\n        : { total: '삭제된 할 일 목록', done: '삭제처리된 완료 목록' };\n    $('.item-count__total .text').textContent = textType.total;\n    $('.item-count__done .text').textContent = textType.done;\n    // 아이템 리스트 보여주기\n    this.#renderItemList();\n    this.#updateItemLength();\n    // 빈 리스트 텍스트 수정\n    const emptyTextType =\n      status === 'todo'\n        ? {\n            text1: '아직 등록된 할 일이 없습니다!',\n            text2: '작업을 생성하고 할 일 목록을 정리하세요 😋',\n          }\n        : {\n            text1: '아직 삭제된 항목이 없습니다!',\n            text2: '새로운 작업을 만들고 삭제해 보세요 🥰',\n          };\n    $('.item-list__empty__container .text-1').textContent = emptyTextType.text1;\n    $('.item-list__empty__container .text-2').textContent = emptyTextType.text2;\n  }\n\n  #clearItemList() {\n    const todoListContainer = $('.item-list__container');\n\n    if (todoListContainer) {\n      todoListContainer.innerHTML = '';\n    }\n  }\n\n  #renderItemList() {\n    this.#clearItemList();\n\n    const items = this.#getCurrentItems();\n\n    if (items.length > 0) {\n      this.#toggleEmptyListState(false);\n      items.forEach((item) =>\n        this.#renderItem(item, 'beforeend', this.todoStatus)\n      );\n    }\n\n    this.#updateItemLength();\n  }\n\n  #loadItemsFromStorage() {\n    const storedTodoItems = JSON.parse(localStorage.getItem('todoItems')) || [];\n\n    this.todoItems = storedTodoItems;\n  }\n\n  #saveItemsToStorage() {\n    localStorage.setItem('todoItems', JSON.stringify(this.todoItems));\n  }\n\n  #updateItemLength() {\n    const container = $('.item-count__container');\n    const todoLengthText = container.querySelector(\n      '.item-count__total > .count'\n    );\n    const doneLengthText = container.querySelector(\n      '.item-count__done > .count'\n    );\n\n    const list = this.#getCurrentItems();\n    const totalLength = list.length;\n    const todoLength = list.filter((item) => !item.completed).length;\n    const doneLength = list.filter((item) => item.completed).length;\n\n    todoLengthText.textContent = todoLength;\n    doneLengthText.textContent = `${doneLength}/${totalLength}`;\n\n    this.#toggleEmptyListState(totalLength <= 0);\n  }\n\n  removeItem(id) {\n    if (!id) {\n      throw new Error('You must provide a valid ID.');\n    }\n\n    const index = this.todoItems.findIndex((item) => item.id === id);\n\n    if (index !== -1) {\n      this.trash.moveItemToTrash(this.todoItems[index]);\n      this.todoItems.splice(index, 1);\n    }\n\n    const target = $(`.task__component[data-key=\"${id}\"]`);\n\n    if (target) {\n      target.remove();\n      this.#updateItemLength();\n      this.#saveItemsToStorage();\n    }\n  }\n\n  toggleComplete(id) {\n    if (!id) {\n      throw new Error('You must provide a valid ID.');\n    }\n    const items = this.#getCurrentItems();\n    const item = items.find((item) => item.id === id);\n\n    if (item) {\n      item.completed = !item.completed;\n      const target = document.querySelector(\n        `.task__component[data-key=\"${id}\"]`\n      );\n\n      target.classList.toggle('done', item.completed);\n      this.#updateItemLength();\n      this.#saveItemsToStorage();\n    }\n  }\n\n  addItem(value) {\n    if (typeof value !== 'string' || value === '') {\n      throw new Error('Make sure you pass the correct string.');\n    }\n\n    const item = {\n      id: Date.now(),\n      text: value,\n      completed: false,\n    };\n\n    this.todoItems.unshift(item);\n    this.#renderItem(item);\n    this.#updateItemLength();\n    this.#saveItemsToStorage();\n  }\n\n  #getCurrentItems() {\n    return this.todoStatus === 'todo' ? this.todoItems : this.trash.trashItems;\n  }\n\n  /**\n   * @param {Object} item\n   * @param {number} item.id\n   * @param {number} item.text\n   * @param {number} item.completed\n   * @param {\"afterbegin\" | \"afterend\" | \"beforebegin\" | \"beforeend\"} position\n   * @param {\"todo\" | \"trash\"} type\n   */\n  #renderItem(item, position = 'afterbegin', type = 'todo') {\n    const itemHTML = this.#generateItem(item, type);\n    const template = document.createElement('template');\n    template.innerHTML = itemHTML.trim();\n    const newItem = template.content.firstChild;\n\n    if (!newItem) {\n      throw new Error('Item not found');\n    }\n\n    if (item.completed) {\n      newItem.classList.add('done');\n    }\n\n    const editButton = newItem.querySelector(\n      '.button__component[data-type=\"editing\"]'\n    );\n\n    if (editButton) {\n      editButton.addEventListener('click', () => {\n        const target = $(\n          `.task__component[data-key=\"${item.id}\"] input[type=\"text\"]`\n        );\n        const status = target.disabled ? 'edit' : 'noEdit';\n        target.disabled = status === 'noEdit' ? true : false;\n\n        if (status === 'edit') {\n          target.focus();\n        }\n\n        $(\n          `.task__component[data-key=\"${item.id}\"] .button__component[data-type=\"editing\"] > span`\n        ).textContent = status === 'edit' ? 'spellcheck' : 'edit_square';\n      });\n    }\n\n    newItem\n      .querySelector('input[type=\"checkbox\"]')\n      .addEventListener('change', () => {\n        this.toggleComplete(item.id);\n      });\n\n    newItem\n      .querySelector('.button__component[data-type=\"deletion\"]')\n      .addEventListener('click', () => {\n        if (this.todoStatus === 'todo') {\n          this.removeItem(item.id);\n        } else {\n          this.todoItems.unshift(this.trash.rollbackItem(item.id));\n          this.#saveItemsToStorage();\n          this.#renderItemList();\n        }\n      });\n\n    this.container.insertAdjacentElement(position, newItem);\n  }\n\n  #toggleEmptyListState(isEmpty) {\n    const containerEmptyList = $('.item-list__empty__container');\n    const containerList = $('.item-list__container');\n\n    if (isEmpty) {\n      containerEmptyList.style.display = 'flex';\n      containerList.style.display = 'none';\n    } else {\n      containerEmptyList.style.display = 'none';\n      containerList.style.display = 'flex';\n    }\n  }\n\n  /**\n   * @param {Object} item\n   * @param {number} item.id\n   * @param {number} item.text\n   * @param {number} item.completed\n   * @param {\"todo\" | \"trash\"} type\n   */\n  #generateItem(item, type = 'todo') {\n    if (!item?.id || !item?.text) {\n      throw new Error('You must provide valid attributes.');\n    }\n\n    const { id, text, completed } = item;\n\n    return `\n      <div class=\"task__component\" data-key=\"${id}\">\n        <div class=\"checkbox__component\">\n          <label>\n            <input type=\"checkbox\" ${completed ? 'checked' : ''}/>\n          </label>\n        </div>\n        <div class=\"input__component\">\n          <input type=\"text\" disabled placeholder=\"텍스트를 입력하세요\" value=\"${text}\"/>\n        </div>\n        ${\n          type === 'todo'\n            ? `<button class=\"button__component\" data-type=\"editing\">\n                <span class=\"material-symbols-outlined\">edit_square</span>\n              </button>`\n            : '<div></div>'\n        }\n        <button class=\"button__component\" data-type=\"deletion\">\n          <span class=\"material-symbols-outlined\">${\n            type === 'todo' ? ' delete ' : 'redo'\n          }</span>\n        </button>\n      </div>\n    `;\n  }\n}\n","import { Theme } from './theme';\nimport { $ } from './utils';\n\nexport class Trash {\n  /**\n   * @type {{ id: number, text: string, completed: boolean }[]}\n   */\n  trashItems = [];\n\n  constructor() {\n    this.button = $('.button__component[data-type=\"garbage\"]');\n    this.#loadItemsFromStorage();\n  }\n\n  #loadItemsFromStorage() {\n    const storedTrashItems =\n      JSON.parse(localStorage.getItem('trashItems')) || [];\n\n    this.trashItems = storedTrashItems;\n  }\n\n  #saveItemsToStorage() {\n    localStorage.setItem('trashItems', JSON.stringify(this.trashItems));\n  }\n\n  moveItemToTrash(item) {\n    if (item) {\n      this.trashItems.unshift(item);\n      this.#saveItemsToStorage('trashItems');\n    }\n  }\n\n  rollbackItem(id) {\n    if (!id) {\n      throw new Error('You must provide a valid ID.');\n    }\n\n    const index = this.trashItems.findIndex((item) => item.id === id);\n\n    if (index !== -1) {\n      const payload = this.trashItems[index];\n\n      this.trashItems.splice(index, 1);\n      this.#saveItemsToStorage();\n\n      return payload;\n    } else {\n      throw new Error('The specified item element was not found.');\n    }\n  }\n}\n","import { $ } from './utils';\n\nexport class Theme {\n  constructor() {\n    this.#addThemeEvent();\n  }\n\n  #addThemeEvent() {\n    const button = $('.button__component[data-type=\"theme\"]');\n\n    if (!button) {\n      throw new Error('Invalid theme button');\n    }\n\n    const currentTheme = localStorage.getItem('theme') || 'dark';\n\n    document.documentElement.setAttribute('data-theme', currentTheme);\n\n    button.addEventListener('click', () => {\n      let theme = document.documentElement.getAttribute('data-theme');\n      theme = theme === 'light' ? 'dark' : 'light';\n\n      document.documentElement.setAttribute('data-theme', theme);\n      localStorage.setItem('theme', theme);\n    });\n  }\n}\n","/**\n *\n * @param {?string} tag\n * @returns {Element}\n */\nexport const $ = (tag) => {\n  if (typeof tag !== 'string' || tag === '') {\n    throw new TypeError('It must be a valid tag name.');\n  }\n\n  const $tag = document.querySelector(tag);\n\n  if ($tag === null) {\n    throw new Error(`Invalid tag:${tag}`);\n  }\n\n  return $tag;\n};\n","import { $ } from './utils';\n\nexport class FormHandler {\n  /**\n   * @typedef {function(string): void} OnSubmit\n   * @param {Object} params\n   * @param {OnSubmit} params.onSubmit - 아이템이 제출될 때 호출되는 콜백 함수\n   */\n  constructor({ onSubmit }) {\n    this.form = $('#todo-form');\n    this.input = $('.input__component[data-type=\"creation\"] > input');\n    this.callback = onSubmit;\n\n    // 폼 제출 이벤트 리스너 등록\n    this.#initEventListeners();\n  }\n\n  #initEventListeners() {\n    if (!this.form) {\n      throw new Error('Invalid form');\n    }\n\n    this.form.addEventListener('submit', this.handler.bind(this));\n  }\n\n  /**\n   * @param {string} value\n   */\n  #checkValue(value) {\n    if (value === '') {\n      window.alert('빈 문자열은 아이템 생성이 불가능합니다.');\n\n      return null;\n    }\n\n    return value;\n  }\n\n  #clearValue() {\n    this.input.value = '';\n  }\n\n  /**\n   * @param {Event} event\n   */\n  handler(event) {\n    event.preventDefault();\n\n    if (!this.input) {\n      throw new Error('Invalid input');\n    }\n\n    const value = this.#checkValue(this.input.value);\n\n    if (value) {\n      this.callback(value);\n      this.#clearValue();\n    }\n  }\n}\n"],"names":["$a6df9c40ba402dc9$export$3d8c2f653ac9d0b9","tag","TypeError","$tag","document","querySelector","Error","$01032ea40510cb1f$export$99442c433de1441d","trashItems","constructor","button","storedTrashItems","JSON","parse","localStorage","getItem","setItem","stringify","moveItemToTrash","item","unshift","rollbackItem","id","index","findIndex","payload","splice","$8f6a480bb40b134f$var$todo","todoStatus","todoItems","trash","container","addEventListener","changeTodoStatus","bind","status","statuses","find","isDisabled","disabled","textContent","textType","total","done","emptyTextType","text1","text2","todoListContainer","innerHTML","items","length","forEach","storedTodoItems","todoLengthText","doneLengthText","list","totalLength","todoLength","filter","completed","doneLength","removeItem","target","remove","toggleComplete","classList","toggle","addItem","value","Date","now","text","position","type","itemHTML","template","createElement","trim","newItem","content","firstChild","add","editButton","focus","insertAdjacentElement","isEmpty","containerEmptyList","containerList","style","display","currentTheme","documentElement","setAttribute","theme","getAttribute","onSubmit","form","input","callback","handler","window","alert","event","preventDefault"],"version":3,"file":"index.46615b84.js.map"}